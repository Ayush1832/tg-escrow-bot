import * as $ from "./util";
import * as G from "@ton/core";
import type { Instr } from "./instr-gen";
import type { Mapping } from "./builder";
import type { StoreOptions } from "./util";
export declare const instr: $.Type<Instr>;
export type codeType = Instr[];
export declare const codeType: () => $.Type<codeType>;
export declare const parseExotic: (cell: G.Cell) => Instr;
export declare const DEFAULT_STORE_OPTIONS: StoreOptions;
export declare const compile: (instructions: Instr[], options?: StoreOptions) => Buffer;
export declare const compileCell: (instructions: Instr[], options?: StoreOptions) => G.Cell;
export declare const compileCellWithMapping: (instructions: Instr[], options?: StoreOptions) => [G.Cell, Mapping];
export declare const decompile: (buffer: Buffer) => Instr[];
export declare const decompileCell: (cell: G.Cell) => Instr[];
//# sourceMappingURL=instr.d.ts.map